---
title: "Regressão Linear Múltipla"
author: "Larysa Mendes, Vitória Maria, Welly Remígio"
editor: visual
---

```{r Setup}
#| echo: true

# Setup para o relatório Quarto

knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)

# Definindo o espelho do CRAN
options(repos = c(CRAN = "https://cloud.r-project.org/"))


```

# Introdução

Este relatório tem por objetivo ajustar um modelo de regressão linear múltiplo com o intuito de investigar a influência de determinadas características associadas a vendas de cadeirinhas de carro para crianças e diversos fatores que podem influenciar essas vendas.

Neste contexto a regressão será realizada sobre base de dados `Carseats`, que trata das vendas de cadeirinhas de carro para crianças (Child Car Seats) em diferentes locais. Essa base está na biblioteca ISLR (An Introduction to Statistical Learning with Applications in R) que é um pacote em R que acompanha o famoso livro "An Introduction to Statistical Learning" (ISLR). Ela contém vários conjuntos de dados usados para demonstrar técnicas de aprendizado estatístico e machine learning. Essa base de dados contém onze variáveis, sendo três destas quanlitativas, as demais são medidas quantitativas.

# Os dados 

É possível baixar os dados do livro [An Introduction to Statistical Learning with applications in R](https://www.statlearning.com/), mas o pacote `ISLR` pode ser baixado diretamente do *R*, para acessar a base de dados, `Carseats`.

```{r}
install.packages("ISLR", quiet=TRUE) #instalando pacote
library(ISLR) #chamando pacote

setwd("C:\\Users\\Notebook\\Documents\\Relatorio_Estatistica")
write.table(Carseats , file="nome_do_arquivo.csv", sep=";", dec=",") #criando arquivo .csv no local de 
#help("Carseats") #descrição das variáveis
#glimpse(Carseats)

```

Descrição da Base de Dados:
Número de observações: 400
Variável Resposta:
- `Sales`: Vendas de cadeirinhas de carro em diferentes locais. (Milhares de unidades)

  
Variáveis Explicativas:
- `CompPrice`: Preço da cadeirinha na loja concorrente. (em dólares).  
- `Income`: Renda média dos consumidores naquela região. (em milhares de dólares).  
- `Advertising`: Valor gasto em publicidade para aquela região (em milhares de dólares).  
- `Population`: População da região. (em milhares).  
- `Price`: Preço da cadeirinha de carro na loja.(em dólares).  
- `ShelveLoc`: Qualidade da localização da prateleira na loja. ("Good", "Medium", "Bad").  
- `Age`: Idade média da população na região. (em anos).  
- `Education`: Nível médio de educação da população na região.(em anos).  
- `Urban`: Um fator que indica se a região é urbana. ("Yes" ou "No").  
- `US`: Um fator que indica se a loja está nos EUA. ("Yes" ou "No").  



## Análise exploratória dos dados

```{r}
library(skimr)

dados <- Carseats

skim(dados)

```

### Comentários:
De acordo com a tabela é possível observar que não há ausência de dados.
# INCOMPLETO



### Análise de Correlação {#sec-GGally}
```{r}
install.packages("GGally", quite=TRUE)
library(GGally)# Pacote para função ggpairs
library(ggplot2)
library(reshape2)
library(corrplot)


head(Carseats)
carseats_numeric <- Carseats[, sapply(Carseats, is.numeric)]
cor_matrix <- cor(carseats_numeric)
print(cor_matrix)
cor_melted <- melt(cor_matrix)

ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       midpoint = 0, limit = c(-1, 1), space = "Lab", 
                       name = "Correlação") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
  labs(x = "", y = "")

corrplot(cor_matrix, method = "color", type = "upper", 
         tl.col = "black", tl.srt = 45, 
         col = colorRampPalette(c("blue", "white", "red"))(200))


### Multicolinearidade: r > 0.9 (ou 0.8)

#graf1 <- ggpairs(dados, columns = c("Sales", "CompPrice", "Income", "Advertising", "Population", "Price", "Age", "Education"),                   ggplot2::aes(colour=ShelveLoc))

#graf1


graf1 <- ggpairs(dados, 
                 columns = c("Sales", "CompPrice", "Income", "Advertising", "Population", "Price", "Age", "Education"), 
                 ggplot2::aes(colour=ShelveLoc), 
                 upper = list(continuous = wrap("cor", size = 3)), # Reduzindo o tamanho das correlações
                 lower = list(continuous = "points")) +            # Exibe os pontos na parte inferior
  theme_minimal() +                                              # Tema minimalista
  theme(axis.text = element_text(size = 8),                      # Ajusta o tamanho do texto nos eixos
        legend.position = "bottom",                              # Move a legenda para baixo
        strip.text = element_text(size = 10))    

graf1

# Salvando o gráfico em .jpeg
ggsave("Grafico_dispersao_carseats.jpeg")

```

#### Comentários



#Ajustando o modelo de regressão linear múltipla
#modelo <- lm(Sales ~ CompPrice + Income + Advertising + Population + Price + Age + Education, data = dados)
#summary(modelo)  # Resumo do modelo#### Multicolinearidade - Analisando o VIF - Variance Inflation Factor


Uma maneira de identificar a multicolinearidade é através do **Fator de Inflação da Variância (VIF)**.

O **VIF é calculado** para cada preditor fazendo uma regressão linear desse preditor em todos os outros preditores e, então, obtendo o $R^2$ dessa regressão. O VIF é apenas $1/(1-R^2)$.

**Como interpretar o VIF?**\

> Um **valor maior que 5** indica correlação **potencialmente grave** entre uma determinada variável preditora e outras variáveis preditoras no modelo. Nesse caso, as estimativas de coeficiente e os valores de p na saída da regressão provavelmente não são confiáveis.

> **VIF \> 10** indica **problema de multicolinearidade**.

\ 

Veja abaixo **como obter o vif** usando o *R*, desconsiderando a variável `Sales` no modelo inicial.

O problema da multicolinearidade não pode ser maior que 0,8/0,9



```{r}
# Ajuste do modelo de regressão linear múltiplo
modelo1 <- lm(Sales ~ CompPrice + Income + Advertising + Population + Price + ShelveLoc + Age + Education + Urban + US, data = dados)

#modelo2 <- update(modelo, ~ . -Species)
#summary(regres)

# Uma opção para obter o: Variance Inflation Factor (VIF)
library(car) 

vif(modelo1)
### Multicolinearidade: VIF > 10

```

p valor é grande?
quem é h0?
Ho é o modelo completo e H1 modelo sem 
H0 os modelos são equivalentes
H1 modelo completo difere do sem a variável




\

# Ajuste do modelo 1 

```{r}
summary(modelo1)

```

\









